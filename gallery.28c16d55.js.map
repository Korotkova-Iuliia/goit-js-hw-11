{"version":3,"sources":["js/api.js","js/gallery.js"],"names":["API_KEY","BASE_URL","fetchTag","tags","page","perPage","fetch","then","response","ok","Error","status","json","refs","searchForm","document","querySelector","galleryList","loadMoreBtn","inputEl","renderPhotos","hits","console","log","markup","map","webformatURL","likes","views","comments","downloads","join","insertAdjacentHTML","reset","innerHTML","classList","add","addEventListener","photos","total","totalHits","e","target","preventDefault","elements","searchQuery","value","remove"],"mappings":";AAWC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,SAAA,EAXD,MAAMA,EAAW,qCACXC,EAAY,0BACX,SAASC,EAASC,EAAMC,EAAMC,GAG5BC,OAAAA,SAFQL,UAAiBD,OAAaG,kEAAqEC,cAAiBC,KAEjHE,KAAKC,IACjB,IAACA,EAASC,GACN,MAAA,IAAIC,MAAMF,EAASG,QAEpBH,OAAAA,EAASI;;AC0JpB,aA9IA,IAAA,EAAA,QAAA,SACA,MAAMC,EAAO,CACXC,WAAYC,SAASC,cAAc,gBACnCC,YAAaF,SAASC,cAAc,YACpCE,YAAaH,SAASC,cAAc,cACpCG,QAASJ,SAASC,cAAc,gBAChCX,QAAS,IAGX,IAAIF,EAAO,EACPC,EAAO,EAqCX,SAASgB,GAAa,KAAEC,IACtBC,QAAQC,IAAIF,GACNG,MAAAA,EAASH,EACZI,IACC,EACEC,aAAAA,EACAvB,KAAAA,EAEAwB,MAAAA,EACAC,MAAAA,EACAC,SAAAA,EACAC,UAAAA,gDAEQJ,WAAsBvB,4GAGlBwB,sEAGAC,wEAGGC,yEAGCC,2CAKnBC,KAAK,IAERlB,EAAKI,YAAYe,mBAAmB,YAAaR,GAGnD,SAASS,IACPX,QAAQC,IAAI,SAEZV,EAAKI,YAAYiB,UAAY,GAzE/BrB,EAAKK,YAAYiB,UAAUC,IAAI,aAE/BvB,EAAKK,YAAYmB,iBAAiB,QAAS,MAChClC,EAAAA,EAAAA,UAAAA,EAAMC,EAAMS,EAAKR,SAASE,KAAK+B,IACtClB,EAAakB,GACblC,GAAQ,EACRkB,QAAQC,IAAIe,EAAOC,OACnBjB,QAAQC,IAAInB,EAAOkC,EAAOE,UAAY3B,EAAKR,SACvCD,EAAOkC,EAAOE,UAAY3B,EAAKR,SACjCQ,EAAKK,YAAYiB,UAAUC,IAAI,iBAIrCvB,EAAKC,WAAWuB,iBAAiB,QAASI,IACpCA,GAAa,IAAbA,EAAEC,OAEGT,OADPpB,EAAKK,YAAYiB,UAAUC,IAAI,aACxBH,MAGXpB,EAAKC,WAAWuB,iBAAiB,SAAUI,IACzCA,EAAEE,iBAEFxC,EAAOU,EAAKC,WAAW8B,SAASC,YAAYC,MAC5CjC,EAAKC,WAAWmB,SAEP9B,EAAAA,EAAAA,UAAAA,EAAMC,GAAMG,KAAK+B,IACxBlB,EAAakB,IACblC,GAAQ,GACGkC,EAAOE,UAAY3B,EAAKR,SACjCQ,EAAKK,YAAYiB,UAAUC,IAAI,aAEjCvB,EAAKK,YAAYiB,UAAUY,OAAO","file":"gallery.28c16d55.js","sourceRoot":"../src","sourcesContent":["const API_KEY = `24377768-1651c24dae1d00899e27f41ae`;\nconst BASE_URL = `https://pixabay.com/api`;\nexport function fetchTag(tags, page, perPage) {\n  const URL = `${BASE_URL}/?key=${API_KEY}&q=${tags}&image_type=photo&orientation=horizontal&safesearch=true&page=${page}&per_page=${perPage}`;\n\n  return fetch(URL).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n}\n","// 1-я попытка..............\n// // OK\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\//\n// import axios from 'axios';\n// import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n// function notifyFailure() {\n//   Notify.failure('Sorry, there are no images matching your search query. Please try again.', {\n//     showOnlyTheLastOne: true,\n//   });\n// }\n\n// eg\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\n//   if (parseInt(data.totalHits) > 0)\n//     $.each(data.hits, function (i, hit) {\n//       console.log(hit.pageURL);\n//     });\n//   else console.log('No hits');\n// });\n\n// OK\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nimport { fetchTag } from './api';\nconst refs = {\n  searchForm: document.querySelector('#search-form'),\n  galleryList: document.querySelector('.gallery'),\n  loadMoreBtn: document.querySelector('.load-more'),\n  inputEl: document.querySelector('.searchQuery'),\n  perPage: 40,\n};\n\nlet tags = 0;\nlet page = 1;\n\nrefs.loadMoreBtn.classList.add('is-hidden');\n\nrefs.loadMoreBtn.addEventListener('click', () => {\n  fetchTag(tags, page, refs.perPage).then(photos => {\n    renderPhotos(photos);\n    page += 1;\n    console.log(photos.total);\n    console.log(page > photos.totalHits / refs.perPage);\n    if (page > photos.totalHits / refs.perPage) {\n      refs.loadMoreBtn.classList.add('is-hidden');\n    }\n  });\n});\nrefs.searchForm.addEventListener('input', e => {\n  if (e.target !== 0) {\n    refs.loadMoreBtn.classList.add('is-hidden');\n    return reset();\n  }\n});\nrefs.searchForm.addEventListener('submit', e => {\n  e.preventDefault();\n\n  tags = refs.searchForm.elements.searchQuery.value;\n  refs.searchForm.reset();\n\n  fetchTag(tags, page).then(photos => {\n    renderPhotos(photos);\n    page += 1;\n    if (page > photos.totalHits / refs.perPage) {\n      refs.loadMoreBtn.classList.add('is-hidden');\n    }\n    refs.loadMoreBtn.classList.remove('is-hidden');\n  });\n});\n\nfunction renderPhotos({ hits }) {\n  console.log(hits);\n  const markup = hits\n    .map(\n      ({\n        webformatURL,\n        tags,\n        // largeImageURL,\n        likes,\n        views,\n        comments,\n        downloads,\n      }) => `<div class=\"photo-card\">\n    <img src=\"${webformatURL}\" alt=\"${tags}\" weight=\"20\" loading=\"lazy\" />\n    <div class=\"info\">\n      <p class=\"info-item\">\n        <b>Likes: ${likes} </b>\n      </p>\n      <p class=\"info-item\">\n        <b>Views: ${views}</b>\n      </p>\n      <p class=\"info-item\">\n        <b>Comments: ${comments}</b>\n      </p>\n      <p class=\"info-item\">\n        <b>Downloads: ${downloads}</b>\n      </p>\n    </div>\n  </div>`,\n    )\n    .join('');\n  //  <img class=\"large-img\" src=\"${largeImageURL}\" alt=\"${tags}\" weight=\"20\" loading=\"lazy\" />;\n  refs.galleryList.insertAdjacentHTML('beforeend', markup);\n}\n\nfunction reset() {\n  console.log('сброс');\n\n  refs.galleryList.innerHTML = '';\n}\n// ${hit.previewURL}\n// function notifyInfo() {\n//   Notify.info('Too many matches found. Please enter a more specific name.', {\n//     showOnlyTheLastOne: true,\n//   });\n// {\n/* ; */\n// }\n\n// if {hits.lengs === 0} {\n// notifyFailure();\n// console.log('ошибка')\n// };\n\n// end\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\n// refs.form.addEventListener('input', e => {\n//   //  const login = searchbox.elements.login.value;\n//   tag = e.target.value;\n//   console.log(e.target.value);\n// });\n\n// function showPhoto({ main, weather, name }) {\n//   refs.temperatureDescription.textContent = weather[0].main;\n//   refs.temmperatureDegree.textContent = Math.round(main.temp);\n//   refs.locationTimezone.textContent = name;\n//   refs.icon.src = `https://openweathermap.org/img/wn/${weather[0].icon}@2x.png`;\n//   setSkycons(weather[0].description);\n// }\n// eg pixabay\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// $.getJSON(URL, function (data) {\n//   if (parseInt(data.totalHits) > 0)\n//     $.each(data.hits, function (i, hit) {\n//       console.log(hit.pageURL);\n//     });\n//   else console.log('No hits');\n// });\n// \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// const searchbox = document.querySelector('.searchbox > input');\n// const profileContainer = document.querySelector('.profile-section');\n\n// searchbox.addEventListener('submit', e => {\n//   e.preventDefault();\n//   const login = searchbox.elements.login.value;\n//   fetchUser(login).then(showProfile);\n//   searchbox.reset();\n// });\n\n// searchbox.addEventListener(\n//   'input',\n//   debounce(() => {\n//     fetchUser(searchbox.value)\n//       .then(userdata => showProfile(userdata))\n//       .catch(error => showError(error));\n//   }, 300),\n// );\n"]}