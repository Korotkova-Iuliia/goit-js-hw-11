{"version":3,"sources":["js/gallery.js"],"names":["refs","searchForm","document","querySelector","galleryList","tags","fetchTag","fetch","then","response","ok","Error","status","json","renderPhotos","photos","console","log","addEventListener","e","preventDefault","elements","searchQuery","value"],"mappings":";AAqBA,MAAMA,EAAO,CACXC,WAAYC,SAASC,cAAc,gBAEnCC,YAAaF,SAASC,cAAc,aAGtC,IAAIE,EAAO,EAQX,SAASC,IAIAC,OAAAA,2EAFkDF,6DAEvCG,KAAKC,IACjB,IAACA,EAASC,GACN,MAAA,IAAIC,MAAMF,EAASG,QAEpBH,OAAAA,EAASI,SAGpB,SAASC,EAAaC,GACpBC,QAAQC,IAAIF,GAnBdf,EAAKC,WAAWiB,iBAAiB,SAAUC,IACzCA,EAAEC,iBAGFd,EAFAD,EAAOL,EAAKC,WAAWoB,SAASC,YAAYC,OAE7Bf,KAAKO,GAAUD,EAAaC","file":"gallery.cff384f9.js","sourceRoot":"../src","sourcesContent":["// 1-я попытка..............\n// // OK\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\//\n// import axios from 'axios';\n// import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n// function notifyFailure() {\n//   Notify.failure('Sorry, there are no images matching your search query. Please try again.', {\n//     showOnlyTheLastOne: true,\n//   });\n// }\n\n// eg\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\n//   if (parseInt(data.totalHits) > 0)\n//     $.each(data.hits, function (i, hit) {\n//       console.log(hit.pageURL);\n//     });\n//   else console.log('No hits');\n// });\n\n// OK\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst refs = {\n  searchForm: document.querySelector('#search-form'),\n  //   input: document.querySelector('.searchQuery'),\n  galleryList: document.querySelector('.gallery'),\n  //   loadMoreBtn: document.querySelector('.load-more'),\n};\nlet tags = 0;\nrefs.searchForm.addEventListener('submit', e => {\n  e.preventDefault();\n  tags = refs.searchForm.elements.searchQuery.value;\n  //   refs.searchForm.reset();\n  fetchTag(tags).then(photos => renderPhotos(photos));\n});\n\nfunction fetchTag() {\n  const API_KEY = `24377768-1651c24dae1d00899e27f41ae`;\n  const URL = `https://pixabay.com/api/?key=${API_KEY}&q=${tags}&image_type=photo&orientation=horizontal&safesearch=true`;\n\n  return fetch(URL).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n}\nfunction renderPhotos(photos) {\n  console.log(photos);\n  //   const markup = photos.map(\n  //     photo => `<div class=\"photo-card\">\n  //     <img src=\"\" alt=\"\" loading=\"lazy\" />\n  //     <div class=\"info\">\n  //       <p class=\"info-item\">\n  //         <b>Likes</b>\n  //       </p>\n  //       <p class=\"info-item\">\n  //         <b>Views</b>\n  //       </p>\n  //       <p class=\"info-item\">\n  //         <b>Comments</b>\n  //       </p>\n  //       <p class=\"info-item\">\n  //         <b>Downloads</b>\n  //       </p>\n  //     </div>\n  //   </div>`,\n  //   );\n  //     .join('');\n  //   refs.galleryList.innerHTML = markup;\n}\n// ${hit.previewURL}\n// function notifyInfo() {\n//   Notify.info('Too many matches found. Please enter a more specific name.', {\n//     showOnlyTheLastOne: true,\n//   });\n// {\n/* ; */\n// }\n// webformatURL - ссылка на маленькое изображение для списка карточек.\n// largeImageURL - ссылка на большое изображение.\n// tags - строка с описанием изображения. Подойдет для атрибута alt.\n// likes - количество лайков.\n// views - количество просмотров.\n// comments - количество комментариев.\n//     downloads - количество загрузок.\n\n// if {hits.lengs === 0} {\n// notifyFailure();\n// console.log('ошибка')\n// };\n\n// end\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\n// refs.form.addEventListener('input', e => {\n//   //  const login = searchbox.elements.login.value;\n//   tag = e.target.value;\n//   console.log(e.target.value);\n// });\n\n// function showPhoto({ main, weather, name }) {\n//   refs.temperatureDescription.textContent = weather[0].main;\n//   refs.temmperatureDegree.textContent = Math.round(main.temp);\n//   refs.locationTimezone.textContent = name;\n//   refs.icon.src = `https://openweathermap.org/img/wn/${weather[0].icon}@2x.png`;\n//   setSkycons(weather[0].description);\n// }\n// eg pixabay\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// $.getJSON(URL, function (data) {\n//   if (parseInt(data.totalHits) > 0)\n//     $.each(data.hits, function (i, hit) {\n//       console.log(hit.pageURL);\n//     });\n//   else console.log('No hits');\n// });\n// \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// const searchbox = document.querySelector('.searchbox > input');\n// const profileContainer = document.querySelector('.profile-section');\n\n// searchbox.addEventListener('submit', e => {\n//   e.preventDefault();\n//   const login = searchbox.elements.login.value;\n//   fetchUser(login).then(showProfile);\n//   searchbox.reset();\n// });\n\n// searchbox.addEventListener(\n//   'input',\n//   debounce(() => {\n//     fetchUser(searchbox.value)\n//       .then(userdata => showProfile(userdata))\n//       .catch(error => showError(error));\n//   }, 300),\n// );\n"]}