{"version":3,"sources":["js/gallery.js"],"names":["refs","searchForm","document","querySelector","tag","addEventListener","e","preventDefault","elements","searchQuery","value","reset","fetch","then","response","ok","Error","status","json","showPhoto","console","log"],"mappings":";AAiBA,MAAMA,EAAO,CACXC,WAAYC,SAASC,cAAc,iBAGrC,IAAIC,EAAM,EACVJ,EAAKC,WAAWI,iBAAiB,SAAUC,IACzCA,EAAEC,iBACFH,EAAMJ,EAAKC,WAAWO,SAASC,YAAYC,MAC3CV,EAAKC,WAAWU,QAMhBC,2EAFyDR,sBAGtDS,KAAKC,IACA,IAACA,EAASC,GACN,MAAA,IAAIC,MAAMF,EAASG,QAEpBH,OAAAA,EAASI,SAEjBL,KAAKM,GAAaC,QAAQC,IAAIF","file":"gallery.e3cc9a37.js","sourceRoot":"../src","sourcesContent":["// import axios from 'axios';\n// import { Notify } from 'notiflix/build/notiflix-notify-aio';\n// eg\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\n//   if (parseInt(data.totalHits) > 0)\n//     $.each(data.hits, function (i, hit) {\n//       console.log(hit.pageURL);\n//     });\n//   else console.log('No hits');\n// });\n// \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// key - твой уникальный ключ доступа к API.\n// q - термин для поиска. То, что будет вводить пользователь.\n// image_type - тип изображения. Мы хотим только фотографии, поэтому задай значение photo.\n// orientation - ориентация фотографии. Задай значение horizontal.\n//     safesearch - фильтр по возрасту.Задай значение true.\n// OK\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\nconst refs = {\n  searchForm: document.querySelector('#search-form'),\n  //   input: document.querySelector('.searchQuery'),\n};\nlet tag = 0;\nrefs.searchForm.addEventListener('submit', e => {\n  e.preventDefault();\n  tag = refs.searchForm.elements.searchQuery.value;\n  refs.searchForm.reset();\n\n  const API_KEY = `24377768-1651c24dae1d00899e27f41ae`;\n\n  const URL = `https://pixabay.com/api/?key=${API_KEY}&q=${tag}&image_type=photo`;\n\n  fetch(URL)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    })\n    .then(showPhoto => console.log(showPhoto));\n});\n// refs.form.addEventListener('input', e => {\n//   //  const login = searchbox.elements.login.value;\n//   tag = e.target.value;\n//   console.log(e.target.value);\n// });\n\n// OK\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n\n// end\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// function showPhoto({ main, weather, name }) {\n//   refs.temperatureDescription.textContent = weather[0].main;\n//   refs.temmperatureDegree.textContent = Math.round(main.temp);\n//   refs.locationTimezone.textContent = name;\n//   refs.icon.src = `https://openweathermap.org/img/wn/${weather[0].icon}@2x.png`;\n//   setSkycons(weather[0].description);\n// }\n// eg pixabay\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// $.getJSON(URL, function (data) {\n//   if (parseInt(data.totalHits) > 0)\n//     $.each(data.hits, function (i, hit) {\n//       console.log(hit.pageURL);\n//     });\n//   else console.log('No hits');\n// });\n// \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n// const searchbox = document.querySelector('.searchbox > input');\n// const profileContainer = document.querySelector('.profile-section');\n\n// searchbox.addEventListener('submit', e => {\n//   e.preventDefault();\n//   const login = searchbox.elements.login.value;\n//   fetchUser(login).then(showProfile);\n//   searchbox.reset();\n// });\n\n// searchbox.addEventListener(\n//   'input',\n//   debounce(() => {\n//     fetchUser(searchbox.value)\n//       .then(userdata => showProfile(userdata))\n//       .catch(error => showError(error));\n//   }, 300),\n// );\n"]}